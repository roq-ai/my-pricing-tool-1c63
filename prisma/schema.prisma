generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model organization {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar
  image       String?   @db.VarChar
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product[]
}

model price_suggestion {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id      String?  @db.Uuid
  suggested_price Int
  manager_id      String?  @db.Uuid
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  user            user?    @relation(fields: [manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product         product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model pricing_history {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id      String?  @db.Uuid
  old_price       Int
  new_price       Int
  change_date     DateTime @db.Timestamp(6)
  sales_velocity  Int?
  bestseller_rank Int?
  margin          Int?
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  product         product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model product {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  price            Int
  organization_id  String?            @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  price_suggestion price_suggestion[]
  pricing_history  pricing_history[]
  organization     organization?      @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  organization     organization[]
  price_suggestion price_suggestion[]
}
